#!/usr/bin/php
<?php

require_once dirname(__DIR__).'/vendor/autoload.php';

use GuzzleHttp\Client;
use fkooman\Config\Reader;
use fkooman\Config\YamlFile;
use fkooman\WebFinger\WebFinger;

try {
    $optionAuthorize = false;
    $optionForce = false;
    $optionFolder = null;
    $fileName = null;

    $i = 1;

    for (; $i < $argc; ++$i) {
        if ('--authorize' === $argv[$i]) {
            $optionAuthorize = true;
        }
        if ('--force' === $argv[$i]) {
            $optionForce = true;
        }
        if ('--folder' === $argv[$i]) {
            $optionFolder = $argv[++$i];
        }
        $fileName = $argv[$i];
    }

    if (null === $fileName) {
        $helpMessage = array(
            '*** remoteStorage Uploader ***',
            '',
            sprintf('Syntax: %s [--authorize] [--folder name] [--force] file', $argv[0]),
            '    --authorize       print a URL to go to with your browser to',
            '                      obtain authorization',
            '    --folder name     specify a folder under "upload" that will',
            '                      be used to upload the file to',
            '    --force           overwrite existing file with the same name',
        );

        throw new Exception(
            implode(PHP_EOL, $helpMessage)
        );
    }

    $reader = new Reader(
        new YamlFile(dirname(__DIR__).'/config/uploader.yaml')
    );

    $userAddress = $reader->v('userAddress');
    $bearerToken = $reader->v('bearerToken');

    $w = new WebFinger();
    $w->setOption('ignore_property_value_type', true);

    $webFingerData = $w->finger($userAddress);
    if($optionAuthorize) {
        $authorizeUri = $webFingerData->getProperty(
            'http://tools.ietf.org/id/draft-dejong-remotestorage',
            'http://tools.ietf.org/html/rfc6749#section-4.2'
        );

        $q = http_build_query(
            array(
                'client_id' => 'https://fkooman.github.io',
                'response_type' => 'token',
                'scope' => 'upload:rw',
                'redirect_uri' => 'https://fkooman.github.io/remote-storage-uploader/index.html',
            )
        );
        $separator = false === strpos($authorizeUri, '?') ? '?' : '&';

        echo sprintf('%s%s%s', $authorizeUri, $separator, $q) . PHP_EOL;
        exit(0);
    }

    if (!is_readable($fileName)) {
        throw new Exception('unable to read file');
    }

    $finfo = finfo_open(FILEINFO_MIME_TYPE); // return mime type ala mimetype extension
    $contentType = finfo_file($finfo, $fileName);
    finfo_close($finfo);

    $body = fopen($fileName, 'r');

    $encodedFileName = rawurlencode(basename($fileName));

    $storageRoot = $webFingerData->getHref('http://tools.ietf.org/id/draft-dejong-remotestorage');
    if (null !== $optionFolder) {
        $encodedFolderName = rawurlencode($optionFolder);
        $requestUri = sprintf('%s/public/upload/%s/%s', $storageRoot, $encodedFolderName, $encodedFileName);
    } else {
        $requestUri = sprintf('%s/public/upload/%s', $storageRoot, $encodedFileName);
    }

    $client = new Client();
    $headers = array(
        'Content-Type' => $contentType,
        'Authorization' => sprintf('Bearer %s', $bearerToken),
    );
    if (!$optionForce) {
        // only upload when file does not exist yet
        $headers['If-None-Match'] = '"*"';
    }

    $response = $client->put(
        $requestUri,
        array(
            'body' => $body,
            'headers' => $headers,
        )
    );
    echo $storageRoot.$requestUri.PHP_EOL;
} catch (Exception $e) {
    echo $e->getMessage().PHP_EOL;
    exit(1);
}
