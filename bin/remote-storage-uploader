#!/usr/bin/php
<?php

require_once dirname(__DIR__).'/vendor/autoload.php';

use GuzzleHttp\Client;
use fkooman\Config\Reader;
use fkooman\Config\YamlFile;

try {
    $optionForce = false;
    $optionFolder = null;
    $fileName = null;

    $i = 1;

    for (; $i < $argc; ++$i) {
        if ('--force' === $argv[$i]) {
            $optionForce = true;
        }
        if ('--folder' === $argv[$i]) {
            $optionFolder = $argv[++$i];
        }
        $fileName = $argv[$i];
    }

    if (null === $fileName) {
        throw new Exception('specify file to upload');
    }

    if (!is_readable($fileName)) {
        throw new Exception('unable to read file');
    }

    $reader = new Reader(
        new YamlFile(dirname(__DIR__).'/config/uploader.yaml')
    );
    $storageRoot = $reader->v('storageRoot');
    $storageUser = $reader->v('storageUser');
    $bearerToken = $reader->v('bearerToken');

    $client = new Client(
        array(
            'base_url' => $storageRoot,
        )
    );

    $finfo = finfo_open(FILEINFO_MIME_TYPE); // return mime type ala mimetype extension
    $contentType = finfo_file($finfo, $fileName);
    finfo_close($finfo);

    $body = fopen($fileName, 'r');

    $encodedFileName = rawurlencode(basename($fileName));

    if (null !== $optionFolder) {
        $encodedFolderName = rawurlencode($optionFolder);
        $requestUri = sprintf('/%s/public/upload/%s/%s', $storageUser, $encodedFolderName, $encodedFileName);
    } else {
        $requestUri = sprintf('/%s/public/upload/%s', $storageUser, $encodedFileName);
    }

    $headers = array(
        'Content-Type' => $contentType,
        'Authorization' => sprintf('Bearer %s', $bearerToken),
    );
    if (!$optionForce) {
        // only upload when file does not exist yet
        $headers['If-None-Match'] = '"*"';
    }

    $response = $client->put(
        $requestUri,
        array(
            'body' => $body,
            'headers' => $headers,
        )
    );
    echo $storageRoot.$requestUri.PHP_EOL;
} catch (Exception $e) {
    echo $e->getMessage().PHP_EOL;
    //echo $e->getResponse().PHP_EOL;
    exit(1);
}
